image:
  repository: nginx
  tag: latest
  pullPolicy: IfNotPresent
  pullSecrets: []


nameOverride: ""
fullnameOverride: ""

rbac:
  create: false
  # annotations: {}
  # role:
  #   resources: []
  #   verbs: []
  # rolebinding:
  #   subjects:

serviceAccount:
  create: false
  # name: ""


configmap:
  enabled: false
  # name: ""
  # data:

pvc:
  enabled: false
  # accessMode: ReadWriteOnce
  # storage: 1Gi

app:
  podAnnotations: {}
  podLabels: {}
  
  replicaCount: 1
  initContainers: []
  restartPolicy: Never

  podSecurityContext:
    runAsUser: 1000
    runAsGroup: 1000
    fsGroup: 2000
  
  securityContext:
    runAsUser: 1000
    runAsNonRoot: true
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    capabilities:
      drop: ["ALL"]
  
  # args: 
  # env:
  
  resources: {}

  volumes: {}
  volumeMounts: {}
  
  livenessProbe: {}
  readinessProbe: {}

  nodeSelector: {}

  tolerations: []

  affinity: {}

rollout:
  enabled: false

job:
  enabled: false
  # annotations:
  #   "helm.sh/hook": pre-install,pre-upgrade
  #   "helm.sh/hook-weight": "0"
  # imagePullSecrets: []
  # image: ""
  # pullPolicy: IfNotPresent
  # command: []
  # env: []
  # restartPolicy: OnFailure

service:
  type: ClusterIP
  port: 80
  nodePort: ""
  additionalPorts: []

ingress:
  enabled: false
  # className: ""
  # annotations: {}
  #   # kubernetes.io/ingress.class: nginx
  #   # kubernetes.io/tls-acme: "true"
  # hosts:
  #   - host: chart-example.local
  #     paths:
  #       - path: /
  #         pathType: ImplementationSpecific
  # tls: []

autoscaling:
  enabled: false
  # minReplicas: 1
  # maxReplicas: 100
  # targetCPUUtilizationPercentage: 80
